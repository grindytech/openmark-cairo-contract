/**
 * This file is autogenerated by Scaffold-Stark.
 * You should not edit it manually or your changes might be overwritten.
 */

const deployedContracts = {
  devnet: {
    OpenMark: {
      abi: [
        {
          type: "impl",
          name: "OpenMarkImpl",
          interface_name: "contracts::Interface::IOpenMark",
        },
        {
          type: "enum",
          name: "contracts::Primitives::OrderType",
          variants: [
            {
              name: "Buy",
              type: "()",
            },
            {
              name: "Offer",
              type: "()",
            },
          ],
        },
        {
          type: "struct",
          name: "contracts::Primitives::Order",
          members: [
            {
              name: "nftContract",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "tokenId",
              type: "core::integer::u128",
            },
            {
              name: "price",
              type: "core::integer::u128",
            },
            {
              name: "salt",
              type: "core::felt252",
            },
            {
              name: "expiry",
              type: "core::integer::u128",
            },
            {
              name: "option",
              type: "contracts::Primitives::OrderType",
            },
          ],
        },
        {
          type: "struct",
          name: "core::array::Span::<core::felt252>",
          members: [
            {
              name: "snapshot",
              type: "@core::array::Array::<core::felt252>",
            },
          ],
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::Interface::IOpenMark",
          items: [
            {
              type: "function",
              name: "buy",
              inputs: [
                {
                  name: "order",
                  type: "contracts::Primitives::Order",
                },
                {
                  name: "signature",
                  type: "core::array::Span::<core::felt252>",
                },
              ],
              outputs: [],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "verifyOrder",
              inputs: [
                {
                  name: "order",
                  type: "contracts::Primitives::Order",
                },
                {
                  name: "signer",
                  type: "core::felt252",
                },
                {
                  name: "signature",
                  type: "core::array::Span::<core::felt252>",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "impl",
          name: "OffchainMessageHashImpl",
          interface_name: "contracts::Interface::IOffchainMessageHash",
        },
        {
          type: "interface",
          name: "contracts::Interface::IOffchainMessageHash",
          items: [
            {
              type: "function",
              name: "get_message_hash",
              inputs: [
                {
                  name: "order",
                  type: "contracts::Primitives::Order",
                },
                {
                  name: "signer",
                  type: "core::felt252",
                },
              ],
              outputs: [
                {
                  type: "core::felt252",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "impl",
          name: "OwnableImpl",
          interface_name: "openzeppelin::access::ownable::interface::IOwnable",
        },
        {
          type: "interface",
          name: "openzeppelin::access::ownable::interface::IOwnable",
          items: [
            {
              type: "function",
              name: "owner",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "transfer_ownership",
              inputs: [
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounce_ownership",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnershipTransferred",
              type: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              kind: "nested",
            },
            {
              name: "OwnershipTransferStarted",
              type: "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::OpenMark::OpenMark::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnableEvent",
              type: "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
              kind: "flat",
            },
          ],
        },
      ],
    },
  },
} as const;

export default deployedContracts;
